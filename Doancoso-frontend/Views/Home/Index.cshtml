<style>
    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-img-top {
        height: 200px;
        background-size: cover;
        background-position: center;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        flex: 1;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .card-text {
        margin-bottom: 0.5rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .featured-img {
        height: 200px;
        background-size: cover;
        background-position: center;
    }

    .h-entry .text {
        padding: 10px;
    }

    .d-flex {
        display: flex;
        align-items: center;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .date {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .text-muted {
        flex-shrink: 0;
    }

    .card-body {
        padding: 15px;
    }

        .card-body .text {
            flex-grow: 1;
        }

        .card-body .mt-auto {
            margin-top: auto;
        }
</style>
<div id="notification-popup-container"></div>
<section class="section bg-light">
    <div class="container">
        <div class="col-md-12">
            <h2>Bài viết của tôi</h2>
        </div>
        <div class="row align-items-stretch retro-layout" id="userProductsContainer">
            <!-- Các bài viết của người dùng sẽ được chèn vào đây -->
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <button id="userPrevPage" class="btn btn-primary">Trước</button>
                <span id="userCurrentPage">Trang 1</span>
                <button id="userNextPage" class="btn btn-primary">Tiếp theo</button>
            </div>
        </div>
    </div>
</section>

<section class="section bg-light">
    <div class="container">
        <div class="col-md-12">
            <h2>Tất cả bài viết</h2>
        </div>
        <div class="row align-items-stretch retro-layout" id="allProductsContainer">
            <!-- Tất cả bài viết sẽ được chèn vào đây -->
        </div>
    </div>
</section>

@Html.Partial("_FooterPartial")

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var userCurrentPage = 1; // Trang hiện tại của người dùng
        var itemsPerPage = 3; // Số sản phẩm trên mỗi trang
        var userProducts = []; // Lưu danh sách sản phẩm của người dùng
        var allProducts = []; // Lưu danh sách tất cả sản phẩm
        var categoriesMap = {}; // Map of categories
        var token = localStorage.getItem('token');
        var headers = {};

        if (token) {
            headers.Authorization = 'Bearer ' + token;
        }

        var currentUser = getUserFromToken(token);
        function getUserFromToken(token) {
            var tokenPayload = JSON.parse(atob(token.split('.')[1]));
            return {
                userId: tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"],
                userName: tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"],
                firstName: decodeURIComponent(escape(tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"])),
                avatarUrl: tokenPayload["AvatarUrl"],
            };
        }

        // Hàm lấy sản phẩm từ API
        function fetchProducts() {
            $.get('http://localhost:5233/api/Products', function (data) {
                userProducts = data.filter(function (product) {
                    return product.id === currentUser.userId;
                }).sort(function (a, b) {
                    return new Date(b.createdAt) - new Date(a.createdAt);
                });

                allProducts = data.sort(function (a, b) {
                    return new Date(b.createdAt) - new Date(a.createdAt);
                });

                updateUI();
            }).fail(function () {
                console.error('Failed to fetch products.');
            });

            $.get('http://localhost:5233/api/Category', function (response) {
                response.forEach(function (category) {
                    categoriesMap[category.id] = category.name;
                });
                updateUI();
            }).fail(function (xhr, status, error) {
                console.error('Error fetching categories:', error);
            });
        }

        // Hàm cập nhật UI dựa trên danh sách sản phẩm từ API
        function updateUI() {
            var userCurrentItems = getCurrentPageItems(userProducts, userCurrentPage);

            // Xóa tất cả sản phẩm trước đó
            $('#userProductsContainer').empty();
            $('#allProductsContainer').empty();

            // Hiển thị sản phẩm của người dùng
            userCurrentItems.forEach(function (product) {
                var categoryName = getCategoryName(product.categoryId);
                var productHTML = `
                            <div class="col-md-4">
                                <a href="/Home/single?slug=${product.slug}" class="h-entry mb-30 v-height gradient">
                                    <div class="featured-img" style="background-image: url('${product.imageUrl}');"></div>
                                    <div class="text">
                                        <span class="date">${categoryName}</span>
                                        <h2>${product.title}</h2>
                                    </div>
                                </a>
                            </div>
                        `;
                $('#userProductsContainer').append(productHTML);
            });

            // Hiển thị tất cả sản phẩm
            allProducts.forEach(function (product) {
                var categoryName = getCategoryName(product.categoryId);
                var productHTML = `
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <a href="/Home/single?slug=${product.slug}">
                            <img class="card-img-top" src="${product.imageUrl}" alt="${product.title}">
                        </a>
                        <div class="card-body">
                            <a href="/Home/single?slug=${product.slug}" class="card-title h5">${product.title}</a>
                                <p class="text-muted">${categoryName} </p>
                            <div class="d-flex align-items-center">
                                <img src="${product.avatarUrl}" alt="Avatar" width="50" height="50" class="rounded-circle mr-2">
                                <span class="card-text"> Tác Giả: ${product.firstName} </span>
                                    
                            </div>
                        </div>
                    </div>
                </div>
            `;
                $('#allProductsContainer').append(productHTML);
            });




            // Hàm lấy tên danh mục từ id danh mục
            function getCategoryName(categoryId) {
                return categoriesMap[categoryId] || 'Unknown';
            }

            // Cập nhật trang hiện tại và nút Previous/Next cho user products
            $('#userCurrentPage').text('Trang ' + userCurrentPage);
            $('#userNextPage').prop('disabled', userCurrentPage === Math.ceil(userProducts.length / itemsPerPage));
        }
        // Hàm lấy sản phẩm trên trang hiện tại
        function getCurrentPageItems(products, currentPage) {
            var startIndex = (currentPage - 1) * itemsPerPage;
            var endIndex = startIndex + itemsPerPage;
            return products.slice(startIndex, endIndex);
        }

        // Xử lý khi click vào nút Previous của user products
        $('#userPrevPage').click(function () {
            if (userCurrentPage > 1) {
                userCurrentPage--;
                updateUI();
            }
        });

        // Xử lý khi click vào nút Next của user products
        $('#userNextPage').click(function () {
            if (userCurrentPage < Math.ceil(userProducts.length / itemsPerPage)) {
                userCurrentPage++;
                updateUI();
            }
        });

        // Khởi động lấy sản phẩm khi tài liệu được tải
        fetchProducts();
    });
</script>