<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifications</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .notificationa-container {
            margin-left: 4px;
            position: relative;
            display: inline-block;
        }

        .notificationa-icon {
            cursor: pointer;
            position: relative;
            display: inline-block;
            background-color: #CCD0D5;
            border-radius: 50%;
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .notificationa-icon .badge {
                position: absolute;
                top: -5px;
                right: -5px;
                padding: 5px 10px;
                border-radius: 50%;
                background-color: red;
                color: white;
                font-size: 12px;
            }

        .notificationsa-dropdown {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            width: 360px;
            max-height: 643px;
            overflow-y: auto;
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
            z-index: 9999;
            right: -76px;
            border-radius: 8px;
            padding: 10px;
        }

            .notificationsa-dropdown .header {
                justify-content: space-between;
                align-items: center;
                margin-bottom: 10px;
            }

                .notificationsa-dropdown .header h4 {
                    margin-bottom: 13px;
                    font-weight: 900;
                    font-size: 24px;
                }

                .notificationsa-dropdown .header .tabs {
                    display: flex;
                    gap: 10px;
                }

                    .notificationsa-dropdown .header .tabs button {
                        background: none;
                        border: none;
                        cursor: pointer;
                        font-size: 14px;
                        color: #000;
                    }

                        .notificationsa-dropdown .header .tabs button.active {
                            font-weight: bold;
                            color: #214252;
                        }

            .notificationsa-dropdown .notificationa {
                display: flex;
                align-items: center;
                background-color: #f9f9f9;
                border: 1px solid #ddd;
                padding: 10px;
                margin-bottom: 10px;
                border-radius: 4px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .notificationsa-dropdown .notificationa:hover {
                    background-color: #e9e9e9;
                }

                .notificationsa-dropdown .notificationa img {
                    border-radius: 50%;
                    margin-right: 10px;
                }

            .notificationsa-dropdown .notificationa-text {
                flex-grow: 1;
            }

        .notificationa-time {
            font-size: 12px;
            color: #888;
        }
    </style>
</head>
<body>
    <div class="notificationa-container">
        <div class="notificationa-icon" id="notificationaIcon" onclick="toggleNotificationaDropdown()">
            <i class="fas fa-bell"></i>
            <span class="badge" id="notificationaBadge">0</span>
        </div>
        <div class="notificationsa-dropdown" id="notificationsaDropdown">
            <div class="header">
                <h4>Thông báo</h4>
                <div class="tabs">
                    <button id="allTab" class="active" onclick="showAll()">Tất cả</button>
                </div>
            </div>
            <div id="notificationaList">
                <!-- Notifications will be prepended here -->
            </div>
            <div id="viewAll" style="text-align: center; cursor: pointer; color: #007bff;" onclick="viewAll()">Xem tất cả</div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script type="text/javascript">
        const notificationaIcon = document.getElementById('notificationaIcon');
        const notificationsaDropdown = document.getElementById('notificationsaDropdown');
        const notificationaBadge = document.getElementById('notificationaBadge');
        const allTab = document.getElementById('allTab');
        const notificationaList = document.getElementById('notificationaList');

        function toggleNotificationaDropdown() {
            const isDisplayed = notificationsaDropdown.style.display === 'block';
            notificationsaDropdown.style.display = isDisplayed ? 'none' : 'block';
        }

        function timeAgo(date) {
            const seconds = Math.floor((new Date() - new Date(date)) / 1000);
            let interval = Math.floor(seconds / 31536000);

            if (interval > 1) {
                return interval + " năm trước";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                return interval + " tháng trước";
            }
            interval = Math.floor(seconds / 86400);
            if (interval >= 1) {
                return interval + " ngày trước";
            }
            interval = Math.floor(seconds / 3600);
            if (interval >= 1) {
                return interval + " giờ trước";
            }
            interval = Math.floor(seconds / 60);
            if (interval >= 1) {
                return interval + " phút trước";
            }
            return Math.floor(seconds) + " giây trước";
        }

        function displayNotificationa(message, slug, createdAt, isRead, avatarUrl) {
            const timeAgoText = timeAgo(createdAt);
            const notificationaClass = isRead ? 'notificationa' : 'notificationa unread';

            const newNotificationa = document.createElement('div');
            newNotificationa.className = notificationaClass;
            newNotificationa.innerHTML = `
                                <img src="${avatarUrl}" alt="User Icon" width="40" height="40" class="cc">
                                <div class="notificationa-text">
                                    ${message}
                                    <div class="notificationa-time">${timeAgoText}</div>
                                </div>
                            `;
            newNotificationa.onclick = function () {
                window.location.href = `http://localhost:5236/Home/single?slug=${slug}`;
            };
            notificationaList.prepend(newNotificationa); // Prepend the new notification
        }

        function fetchNotificationsa(userId) {
            $.ajax({
                url: "http://localhost:5233/api/Products/noti/" + userId,
                method: "GET",
                headers: {
                    "Authorization": "Bearer " + localStorage.getItem('token')
                },
                success: function (data) {
                    notificationaList.innerHTML = ''; // Clear existing notifications
                    data.forEach(notificationa => displayNotificationa(notificationa.message, notificationa.slug, notificationa.createdAt, notificationa.isRead, notificationa.avatarUrl));
                    notificationaBadge.textContent = data.length;
                },
                error: function (error) {
                    console.error("Error fetching notificationsa: ", error);
                }
            });
        }

        function showAll() {
            allTab.classList.add('active');
            // Fetch all notifications
            const token = localStorage.getItem('token');
            const tokenPayload = decodeJwt(token);
            const userId = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
            fetchNotificationsa(userId);
        }

        function viewAll() {
            // Handle the view all click event
            alert('View all clicked');
        }

        (function initializeNotificationsa() {
            const token = localStorage.getItem('token');
            const tokenPayload = decodeJwt(token);
            const userId = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
            fetchNotificationsa(userId);
        })();

        function decodeJwt(token) {
            try {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
                return JSON.parse(jsonPayload);
            } catch (error) {
                console.error("Error decoding JWT token: ", error);
                return {};
            }
        }
    </script>
</body>
</html>
