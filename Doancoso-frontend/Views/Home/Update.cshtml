
<h1>@ViewData["Title"]</h1>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/datatables.min.js"></script>
<link href="~/css/datatables.datatables.min.css" rel="stylesheet" />
<script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
<style>
    .containerr {
        max-width: 1120px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }

    form div {
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: 700;
    }

    input, textarea {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .hidden {
        display: none;
    }

    .image-container {
        max-width: 700px;
        max-height: 700px;
        overflow: hidden; /* Đảm bảo ảnh không vượt quá kích thước container */
    }

        .image-container img {
            width: 100%; /* Đảm bảo ảnh chiếm toàn bộ chiều rộng của container */
            height: auto; /* Đảm bảo tỷ lệ khung hình bảo toàn */
        }

</style>
<div class="containerr">
    <input type="file" id="imageInput" accept="image/*">

    <form id="editForm">
        <div style="display: none;">
            <!-- Ẩn trường BlogId -->
            <label for="blogId">BlogId:</label>
            <input type="text" id="blogId" name="blogId" readonly />
        </div>
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" />
        </div>
        <div>
            <label for="title">Mô tả:</label>
            <input type="text" id="description" name="description">
        </div>
        <div>
            <label for="content">Content:</label>
            <textarea id="content" name="content"></textarea>
        </div>
        <div class="hidden">
            <label for="slug">Slug</label>
            <input id="slug" name="slug">
        </div>
        <div class="hidden">
            <!-- Ẩn trường CreatedAt -->
            <label for="userId">CreateDate:</label>
            <input type="text" id="createdAt" name="createdAt" readonly />
        </div>
        <input type="hidden" id="userId" name="userId">
        <div class="hidden">
            <label for="userName">Tên người dùng:</label>
            <input type="text" id="username" name="userName" readonly> <!-- ReadOnly -->
        </div>
        <div @* class="hidden" *@>
            <label for="imageUrl">Ảnh</label>
            <input type="text" id="imageUrl" name="imageUrl"> <!-- ReadOnly -->
        </div>
        <input @* type="hidden" *@ id="avatarUrl" name="avatarUrl">
        <input @* type="hidden" *@ id="firstName" name="firstName">
        <div>
            <label for="imageUrl">Ảnh:</label>
            <div class="image-container">
                <img id="imagePreview" src="" alt="Ảnh">
            </div>
        </div>
        <div>
            <label for="category">Category:</label>
            <select id="category" name="category">
                <!-- Danh sách các category sẽ được thêm vào đây -->
            </select>
        </div>
        <div>
            <label for="isPublic">Trạng thái:</label>
            <select id="isPublic" name="isPublic">
                <option value="true">Công khai</option>
                <option value="false">Riêng tư</option>
            </select>
        </div>
        <button type="button" onclick="updateBlog()">Update</button>
    </form>
</div>
<script>
    $(document).ready(function () {
        // Gọi hàm để lấy danh sách category khi trang được tải
        getCategories();

        // Hàm để gửi yêu cầu lấy danh sách category từ server
        function getCategories() {
            $.ajax({
                url: 'http://localhost:5233/api/Category',
                type: 'GET',
                success: function (data) {
                    // Sau khi nhận được danh sách category, điền vào dropdown
                    populateCategoriesDropdown(data);
                },
                error: function (xhr, status, error) {
                    console.error('Đã xảy ra lỗi khi lấy danh sách category:', error);
                }
            });
        }

       
        function populateCategoriesDropdown(categories) {
            var dropdown = $('#category');
            // Xóa tất cả các option hiện có trong dropdown
            dropdown.empty();
            // Thêm một option mặc định
            dropdown.append($('<option>').val('').text('Chọn Category'));
            // Thêm từng category vào dropdown
            categories.forEach(function (category) {
                dropdown.append($('<option>').val(category.id).text(category.name));
            });
        }

    });
    var token = localStorage.getItem('token');
    var userId, username, firstName, avatarUrl;
    if (token) {
        var tokenPayload = JSON.parse(atob(token.split('.')[1]));
        userId = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
        $('#userId').val(userId);

        username = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"];
        $('#username').val(username);
        firstName = decodeURIComponent(escape(tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"]));
        $('#firstName').val(firstName);
        avatarUrl = tokenPayload["AvatarUrl"];
        $('#avatarUrl').val(avatarUrl);
    }
    $('#imageInput').change(function () {
        uploadImage(); // Gọi hàm uploadImage() khi có thay đổi trong input file
    });

    // Lấy thông tin blog khi trang được tải
    fetchBlogDetails();

    // Initialize CKEditor for the content textarea
    CKEDITOR.replace('content');

    function fetchBlogDetails() {
        var urlParams = new URLSearchParams(window.location.search);
        var slug = urlParams.get('slug');

        $.get('http://localhost:5233/api/Products/' + slug, function (data) {
            $('#blogId').val(data.blogId);
            $('#slug').val(data.slug);
            $('#title').val(data.title);
            $('#description').val(data.description);
            CKEDITOR.instances.content.setData(data.content);
            $('#createdAt').val(data.createdAt);
            $('#imageUrl').val(data.imageUrl);
            $('#category').val(data.categoryId);
            $('#imagePreview').attr('src', data.imageUrl);
            $('#isPublic').val(data.isPublic ? 'true' : 'false');

            // Thay thế các trường lấy từ database bằng các trường phân giải từ token
            $('#userId').val(userId);
            $('#username').val(username);
            $('#firstName').val(firstName);
            $('#avatarUrl').val(avatarUrl);

            var token = localStorage.getItem('token');
            if (token) {
                var tokenPayload = JSON.parse(atob(token.split('.')[1]));
                var currentUserId = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];

                // Kiểm tra xem user ID của người dùng hiện tại có khớp với user ID của blog không
                if (currentUserId !== data.userId) {
                    alert('Bạn không có quyền chỉnh sửa blog này.');
                    window.location.href = 'http://localhost:5236/Home/Index'; // Redirect to home page
                }
            } else {
                // Nếu không có token, chuyển hướng đến trang đăng nhập hoặc xử lý tùy ý
                window.location.href = 'http://localhost:5236/Account/Login';
            }
        });
    }

   
    function updateBlog() {
        var userId = $('#userId').val(); // Lấy userId từ form
        var token = localStorage.getItem('token'); // Lấy token từ localStorage
        if (token) {
            var tokenPayload = JSON.parse(atob(token.split('.')[1]));
            var currentUserId = tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];

            // Kiểm tra xem userId của người dùng hiện tại có khớp với userId từ form không
            if (userId !== currentUserId) {
                alert('Bạn không có quyền chỉnh sửa blog này.');
                window.location.href = 'http://localhost:5236/Home/Index'; // Redirect to another page
                return; // Dừng hàm ở đây nếu userId không khớp
            }
        } else {
            alert('Bạn phải đăng nhập để chỉnh sửa blog.'); // Thông báo nếu không có token
            window.location.href = 'http://localhost:5236/Account/Login'; // Redirect to login page
            return; // Dừng hàm ở đây nếu không có token
        }

        // Tiếp tục thực hiện cập nhật blog nếu userId khớp
        var blogId = $('#blogId').val();
        var slug = $('#slug').val();
        var title = $('#title').val();
        var description = $('#description').val();
        var content = CKEDITOR.instances.content.getData();
        var createdAt = $('#createdAt').val();
        var userName = $('#username').val();
        var firstName = $('#firstName').val();
        var imageUrl = $('#imageUrl').val();
        var avatarUrl = $('#avatarUrl').val();
        var categoryId = $('#category').val();
        var isPublic = $('#isPublic').val() === "true";

        var updatedData = {
            blogId: blogId,
            slug: slug,
            title: title,
            description: description,
            content: content,
            createdAt: createdAt,
            userId: userId,
            userName: userName,
            firstName: firstName,
            imageUrl: imageUrl,
            avatarUrl: avatarUrl,
            categoryId: categoryId,
            isPublic: isPublic

        };

        $.ajax({
            url: 'http://localhost:5233/api/Products/' + slug,
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(updatedData),
            success: function () {
                alert('Blog updated successfully.');
                window.location.href = 'http://localhost:5236/Home/Index';
            },
            error: function (xhr, status, error) {
                alert('An error occurred while updating the blog: ' + error);
            }
        });
    }
    function uploadImage() {
        const fileInput = document.getElementById('imageInput');
        const file = fileInput.files[0];

        if (!file) {
            alert('Vui lòng chọn một hình ảnh.');
            return;
        }

        const formData = new FormData();
        formData.append('file', file);

        $.ajax({
            url: 'http://localhost:5233/api/Products/upload',
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (data) {
                $('#imageUrl').val(data.url);
                $('#imagePreview').attr('src', data.url);
                $('#imageContainer').show();
            },
            error: function (xhr, status, error) {
                console.error('Lỗi khi tải lên hình ảnh:', error);
                alert('Đã xảy ra lỗi khi tải lên hình ảnh.');
            }
        });
    }
    $(document).ready(function () {
        // Fetch blog details when the page loads
        fetchBlogDetails();

        // Initialize CKEditor for the content textarea
        CKEDITOR.replace('content');

        // Check if userId matches the current user's ID

    });


</script>
