<section class="section bg-light">
    <div class="container">
        <div class="col-md-12">
            <h2>Bài viết của tôi</h2>
        </div>
        <div class="row align-items-stretch retro-layout" id="userProductsContainer">
            <!-- Các bài viết của người dùng sẽ được chèn vào đây -->
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <button id="userPrevPage" class="btn btn-primary">Trước</button>
                <span id="userCurrentPage">Trang 1</span>
                <button id="userNextPage" class="btn btn-primary">Tiếp theo</button>
            </div>
        </div>
    </div>
</section>

<section class="section bg-light">
    <div class="container">
        <div class="col-md-12">
            <h2>Bài viết bạn có thể thích</h2>
        </div>
        <div class="row align-items-stretch retro-layout" id="allProductsContainer">
            <!-- Tất cả bài viết sẽ được chèn vào đây -->
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <button id="allPrevPage" class="btn btn-primary">Trước</button>
                <span id="allCurrentPage">Trang 1</span>
                <button id="allNextPage" class="btn btn-primary">Tiếp theo</button>
            </div>
        </div>
    </div>
</section>

@Html.Partial("_FooterPartial")

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var userCurrentPage = 1; // Trang hiện tại của người dùng
        var allCurrentPage = 1; // Trang hiện tại của tất cả bài viết
        var itemsPerPage = 3; // Số sản phẩm trên mỗi trang
        var userProducts = []; // Lưu danh sách sản phẩm của người dùng
        var allProducts = []; // Lưu danh sách tất cả sản phẩm
        var categoriesMap = {}; // Map of categories
        var token = localStorage.getItem('token');
        var headers = {};

        if (token) {
            headers.Authorization = 'Bearer ' + token;
        }

        var currentUser = getUserFromToken(token);
        function getUserFromToken(token) {
            var tokenPayload = JSON.parse(atob(token.split('.')[1]));
            return {
                userId: tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"],
                userName: tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"],
                firstName: decodeURIComponent(escape(tokenPayload["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"])),
                avatarUrl: tokenPayload["AvatarUrl"],
            };
        }

        // Hàm lấy sản phẩm từ API
        function fetchProducts() {
            $.get('http://localhost:5233/api/Products', function (data) {
                // Separate user's products and all products
                userProducts = data.filter(function (product) {
                    return product.userId === currentUser.userId;
                }).sort(function (a, b) {
                    return new Date(b.createdAt) - new Date(a.createdAt);
                });

                allProducts = data.sort(function (a, b) {
                    return new Date(b.createdAt) - new Date(a.createdAt);
                });

                updateUI();
            }).fail(function () {
                console.error('Failed to fetch products.');
            });

            $.get('http://localhost:5233/api/Category', function (response) {
                response.forEach(function (category) {
                    categoriesMap[category.id] = category.name;
                });
                updateUI();
            }).fail(function (xhr, status, error) {
                console.error('Error fetching categories:', error);
            });
        }

        // Hàm cập nhật UI dựa trên danh sách sản phẩm từ API
        function updateUI() {
            var userCurrentItems = getCurrentPageItems(userProducts, userCurrentPage);
            var allCurrentItems = getCurrentPageItems(allProducts, allCurrentPage);

            // Xóa tất cả sản phẩm trước đó
            $('#userProductsContainer').empty();
            $('#allProductsContainer').empty();

            // Hiển thị sản phẩm của người dùng
            userCurrentItems.forEach(function (product) {
                var categoryName = getCategoryName(product.categoryId);
                var productHTML = `
                        <div class="col-md-4">
                            <a href="/Home/single?slug=${product.slug}" class="h-entry mb-30 v-height gradient">
                                <div class="featured-img" style="background-image: url('${product.imageUrl}');"></div>
                                <div class="text">
                                    <span class="date">${categoryName}</span>
                                    <h2>${product.title}</h2>
                                </div>
                            </a>
                        </div>
                    `;
                $('#userProductsContainer').append(productHTML);
            });

            // Hiển thị tất cả sản phẩm
            allCurrentItems.forEach(function (product) {
                var categoryName = getCategoryName(product.categoryId);
                var productHTML = `
                        <div class="col-md-4">
                            <a href="/Home/single?slug=${product.slug}" class="h-entry mb-30 v-height gradient">
                                <div class="featured-img" style="background-image: url('${product.imageUrl}');"></div>
                                <div class="text">
                                    <span class="date">${categoryName}</span>
                                    <h2>${product.title}</h2>
                                </div>
                            </a>
                        </div>
                    `;
                $('#allProductsContainer').append(productHTML);
            });

            // Hàm lấy tên danh mục từ id danh mục
            function getCategoryName(categoryId) {
                return categoriesMap[categoryId] || 'Unknown';
            }

            // Cập nhật trang hiện tại và nút Previous/Next cho user products
            $('#userCurrentPage').text('Trang ' + userCurrentPage);
            $('#userPrevPage').prop('disabled', userCurrentPage === 1);
            $('#userNextPage').prop('disabled', userCurrentPage === Math.ceil(userProducts.length / itemsPerPage));

            // Cập nhật trang hiện tại và nút Previous/Next cho all products
            $('#allCurrentPage').text('Trang ' + allCurrentPage);
            $('#allPrevPage').prop('disabled', allCurrentPage === 1);
            $('#allNextPage').prop('disabled', allCurrentPage === Math.ceil(allProducts.length / itemsPerPage));
        }

        // Hàm lấy sản phẩm trên trang hiện tại
        function getCurrentPageItems(products, currentPage) {
            var startIndex = (currentPage - 1) * itemsPerPage;
            var endIndex = startIndex + itemsPerPage;
            return products.slice(startIndex, endIndex);
        }

        // Xử lý khi click vào nút Previous của user products
        $('#userPrevPage').click(function () {
            if (userCurrentPage > 1) {
                userCurrentPage--;
                updateUI();
            }
        });

        // Xử lý khi click vào nút Next của user products
        $('#userNextPage').click(function () {
            if (userCurrentPage < Math.ceil(userProducts.length / itemsPerPage)) {
                userCurrentPage++;
                updateUI();
            }
        });

        // Xử lý khi click vào nút Previous của all products
        $('#allPrevPage').click(function () {
            if (allCurrentPage > 1) {
                allCurrentPage--;
                updateUI();
            }
        });

        // Xử lý khi click vào nút Next của all products
        $('#allNextPage').click(function () {
            if (allCurrentPage < Math.ceil(allProducts.length / itemsPerPage)) {
                allCurrentPage++;
                updateUI();
            }
        });

        // Khởi động lấy sản phẩm khi tài liệu được tải
        fetchProducts();
    });
</script>
